/*

 插入排序: 一个数组中有N个数，已经排好顺序、按增序排列。
 现在插入一个新的值，要求插入到指定位置，插入后所有数仍然是按增序排列 。

 有一个己排好序的整形数组a，
 int a[16] = {1, 3, 5, 7, 9 };
 int count = 5;  // 现存了5个数
 int b = 4;

 // 下面，将b插入到数据组a中
 // // 插入后，数组的前6个元素为  1,3,4,5,7,9
 
 */

#include <stdio.h>

int main()
{
	int a[16] = {1, 3, 5, 7, 9 };
	int count = 5;  // 现存了5个数
	int b = -1;

	// 找到待插入的位置 
	int pos = count;
	for(int i=0; i<count; i++)
	{
		if( b < a[i] )
		{
			pos = i;
			break;
		}
	}
	printf("插入的位置是: %d \n", pos);

	// 后移
	// a[5] = a[4]
	// a[4] = a[3]
	for(int i=count; i > pos ; i--)
	{
		a[i] = a[i-1];
	}

	// 插入
	a[pos] = b;

	return 0;
}


/*
 * 这个题目细想下也不会太难，因为默认原先的数字是已经增序排列的
 * 所以只需要依次对比大小，就可以找到插入位置
 * 之后就比较难了，要将数组后移
 *
 * 邵发用的方法是 for循环并计算后移结束后的最后一位和后移的位数范围
 * 之后从计算好的最后一位开始依次等于前一位 a[i] = a[i-1]
 * 这样最后就会导致 数组有两个元素内数据是相同的
 *
 * 最后插入 既定的数字 在两个相同中的第一个的元素中
 *
 */



